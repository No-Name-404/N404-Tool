#!/usr/bin/python3 -B
from cmd import Cmd
from N4Tools.Design import Color,Style,Animation
import os ,sys ,subprocess

from tools import (
        Tools_shell,Style_shell,
        Hash_shell,Telebot_shell
        )

from tools.root import (
HELP_MAIN as HELP, # text...
ABOUT_MAIN as ABOUT, # text...
PROMPT,
SHELL_ALL,
EasyCmd,
TOOLS_PATH,
XPATH )

from tools.root.db import RULER

# The Theme of the tool
Color.Theme('light')

class shell(SHELL_ALL):
    # the shell command...
    prompt = PROMPT('main')

    def help(self):
        return self.SQUARE(HELP)

    def do_update(self,arg):
        # download new version...
        subprocess.run('git clone https://github.com/No-Name-404/N404-Tool',shell=True)
        os.chdir('N404-Tool/')
        subprocess.run('python3 -B setup.py',shell=True)
        print(Color.reader('\033[0;37m[ G#OK\033[0;37m ] N404-Tool has been downloaded...'))
        print(Color.reader('\033[0;37m[ G#OK\033[0;37m ] N404-Tool has been setup...'))
        exit(Color.reader('G#Done: W#run the tool agin...'))

    def do_delete(self,arg):
        user = input(Color.reader('R#Do you really want to delete the tool?\n  [G#yR#/n] :\033[0;37m '))
        if user.lower().strip() == 'y':
            subprocess.run(DEL+os.environ['SHELL'].replace('bash', 'N404-Tool'),shell=True,capture_output=True)
            subprocess.run(DEL+os.environ['SHELL'].replace('bin/bash', 'lib/N404-Tool'),shell=True,capture_output=True)
            subprocess.run(DEL+(os.getcwd() if os.getcwd().endswith('-Tool') else os.getcwd()+'/N404-Tool' ),shell=True,capture_output=True)
            user = input(Color.reader('R#Do you want to delete the database?\n  [G#yR#/n] :\033[0;37m '))
            if user.lower().strip() == 'y':
                subprocess.run(DEL+os.environ['SHELL'].replace('bin/bash', 'lib/db.json'),shell=True,capture_output=True)
            exit()

    def do_about(self,arg):
        # display the About text...
        self.SQUARE(self.SQUARE(ABOUT),type=False)

    def do_Tools(self,arg):
        # start the Tools section...
        Tools_shell.shell_main = super(shell,self).cmdloop
        Tools_shell().cmdloop(Tools_shell().help())

    def do_Style(self,arg):
        # start the Style section...
        Style_shell.shell_main = super(shell,self).cmdloop
        Style_shell().cmdloop(Style_shell().help())

    def do_Hash(self,arg):
        # start the Hash section...
        Hash_shell.shell_main = super(shell,self).cmdloop
        Hash_shell().cmdloop(Hash_shell().help())

    def do_Telebot(self,arg):
        # start the Telebot section...
        Telebot_shell.shell_main = super(shell,self).cmdloop
        Telebot_shell().cmdloop(Telebot_shell().help())
        # print ('It will be available soon...')

if __name__=='__main__': # Check if run as main
    if len(sys.argv) > 1:
        if sys.argv[1] == 'Hash':
            shell().do_Hash(None)

        elif sys.argv[1] == 'Style':
            shell().do_Style(None)

        elif sys.argv[1] == 'Tools':
            shell().do_Tools(None)

        elif sys.argv[1] == 'Fishing':
            shell().do_Fishing(None)

        elif sys.argv[1] == 'Telebot':
            shell().do_Telebot(None)

        elif sys.argv[1] == 'EasyCmd':
            EasyCmd = EasyCmd()
            EasyCmd.write()

        elif sys.argv[1] == 'Update':
            shell().do_update(None)

        elif sys.argv[1] == 'New':
            print (SHELL_ALL().SQUARE(f'''
 New:
{RULER}
  EasyCmd has been added..
  Fix errors [path , database , install]
  The Fishing section has been deleted...
{RULER}

 To use:
{RULER}
  N404-Tool EasyCmd
{RULER}
'''))

        else:
            print (SHELL_ALL().SQUARE(f'''
 N404-Tool:
{RULER}
  Tools     To open Tools section.
  Style     To open Style section.
  Hash      To open Hash section.
  Fishing   To open Fishing section.
  Telebot   To open Telebot section.
{RULER}
  EasyCmd   Shortcuts to commands.
  Update    To update the tool.
{RULER}
  New       What is the New ?
{RULER}
'''))
    else:
        shell().cmdloop() # start the N404-Tool
